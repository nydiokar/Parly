"""Baseline schema creation for new deployments

Revision ID: a46528f216f8
Revises: d7ac3602a5e8
Create Date: 2025-10-21 16:45:12.765660

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a46528f216f8'
down_revision: Union[str, Sequence[str], None] = 'd7ac3602a5e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create members table
    op.create_table('members',
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('constituency', sa.String(), nullable=True),
        sa.Column('party', sa.String(), nullable=True),
        sa.Column('province_name', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('member_id')
    )

    # Create roles table
    op.create_table('roles',
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=True),
        sa.Column('role_type', sa.Enum('MEMBER_OF_PARLIAMENT', 'POLITICAL_AFFILIATION', 'COMMITTEE_MEMBER', 'PARLIAMENTARY_ASSOCIATION', 'ELECTION_CANDIDATE', 'PARLIAMENTARIAN_OFFICE', name='roletype'), nullable=True),
        sa.Column('from_date', sa.Date(), nullable=True),
        sa.Column('to_date', sa.Date(), nullable=True),
        sa.Column('parliament_number', sa.String(), nullable=True),
        sa.Column('session_number', sa.String(), nullable=True),
        sa.Column('constituency_name', sa.String(), nullable=True),
        sa.Column('constituency_province', sa.String(), nullable=True),
        sa.Column('party', sa.String(), nullable=True),
        sa.Column('committee_name', sa.String(), nullable=True),
        sa.Column('affiliation_role_name', sa.String(), nullable=True),
        sa.Column('organization_name', sa.String(), nullable=True),
        sa.Column('office_role', sa.String(), nullable=True),
        sa.Column('election_result', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['member_id'], ['members.member_id'], ),
        sa.PrimaryKeyConstraint('role_id'),
        sa.UniqueConstraint('member_id', 'role_type', 'from_date', 'parliament_number', 'session_number', 'committee_name', 'organization_name', name='unique_role')
    )

    # Create votes table
    op.create_table('votes',
        sa.Column('vote_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=True),
        sa.Column('parliament_number', sa.Integer(), nullable=True),
        sa.Column('session_number', sa.Integer(), nullable=True),
        sa.Column('vote_topic', sa.String(), nullable=True),
        sa.Column('subject', sa.Text(), nullable=True),
        sa.Column('vote_result', sa.String(), nullable=True),
        sa.Column('vote_date', sa.Date(), nullable=True),
        sa.Column('member_vote', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['member_id'], ['members.member_id'], ),
        sa.PrimaryKeyConstraint('vote_id')
    )

    # Create parliamentary_associations table
    op.create_table('parliamentary_associations',
        sa.Column('association_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=True),
        sa.Column('association_name', sa.String(), nullable=True),
        sa.Column('role_in_group', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['member_id'], ['members.member_id'], ),
        sa.PrimaryKeyConstraint('association_id')
    )

    # Create bills table
    op.create_table('bills',
        sa.Column('bill_id', sa.Integer(), nullable=False),
        sa.Column('legisinfo_bill_id', sa.Integer(), nullable=True),
        sa.Column('bill_number', sa.String(), nullable=True),
        sa.Column('parliament_number', sa.Integer(), nullable=True),
        sa.Column('session_number', sa.Integer(), nullable=True),
        sa.Column('short_title', sa.String(), nullable=True),
        sa.Column('long_title', sa.Text(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('sponsor_id', sa.Integer(), nullable=True),
        sa.Column('chamber', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['sponsor_id'], ['members.member_id'], ),
        sa.PrimaryKeyConstraint('bill_id'),
        sa.UniqueConstraint('legisinfo_bill_id')
    )

    # Create bill_progress table
    op.create_table('bill_progress',
        sa.Column('progress_id', sa.Integer(), nullable=False),
        sa.Column('bill_id', sa.Integer(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('progress_date', sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(['bill_id'], ['bills.bill_id'], ),
        sa.PrimaryKeyConstraint('progress_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables in reverse order (due to foreign key constraints)
    op.drop_table('bill_progress')
    op.drop_table('bills')
    op.drop_table('parliamentary_associations')
    op.drop_table('votes')
    op.drop_table('roles')
    op.drop_table('members')
    # ### end Alembic commands ###
